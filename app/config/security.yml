# To get started with security, check out the documentation:
# http://symfony.com/doc/current/book/security.html
#parameters:
#    roles: ['ROLE_USER','ROLE_BOARD',ROLE_STAFF]

security:
    encoders:
        FOS\UserBundle\Model\UserInterface: bcrypt

    role_hierarchy:

        ROLE_STAFF: ROLE_USER
        ROLE_OWNER: ROLE_MANAGER
        ROLE_SUPER_ADMIN: ROLE_OWNER

    providers:
        fos_userbundle:
            id: fos_user.user_provider.username_email

    firewalls:

#        login:
#            pattern:  ^/api/tokens
#            stateless: true
#            anonymous: true
#            form_login:
#                check_path:               /api/tokens/new
#                success_handler:          lexik_jwt_authentication.handler.authentication_success
#                failure_handler:          lexik_jwt_authentication.handler.authentication_failure
#                require_previous_session: false
#                provider: fos_userbundle

        api:
            pattern:   ^/api
            anonymous: true
            stateless: true
#            form_login:
#              check_path:               /api/tokens/new
#              success_handler:          lexik_jwt_authentication.handler.authentication_success
##              failure_handler:          lexik_jwt_authentication.handler.authentication_failure
#              require_previous_session: false
#              provider: fos_userbundle
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        main:

          remember_me:
            secret:   '%secret%'
            lifetime: 80000 # 1 day~ in seconds
#            # by default, the feature is enabled by checking a
#            # checkbox in the login form (see below), uncomment the
#            # following line to always enable it.
#            always_remember_me: true
          pattern:   ^/
          form_login:

              provider: fos_userbundle
              csrf_token_generator: security.csrf.token_manager

#              login_path: login_form
#              check_path: login_check

          logout:       true
          anonymous:    true
#
#        login:
#            pattern:  ^/api/login
#            stateless: true
#            anonymous: true
#            form_login:
#                check_path:               /api/login_check
#                success_handler:          lexik_jwt_authentication.handler.authentication_success
#                failure_handler:          lexik_jwt_authentication.handler.authentication_failure
#                require_previous_session: false
#
#        api:
#            pattern:   ^/api
#            stateless: true
#            guard:
#                authenticators:
#                    - lexik_jwt_authentication.jwt_token_authenticator

#          logout:
#            path:   logout
#            target: /

    access_control:
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }

        - { path: ^/$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/loadinfo, role: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/tracks, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/login_check, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/tokens/new, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/api/new, roles: IS_AUTHENTICATED_FULLY  }
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY  }


        - { path: ^/user, role: ROLE_MANAGER }
        - { path: ^/(.+), role: ROLE_USER }

        - { path: ^/, role: ROLE_USER }

